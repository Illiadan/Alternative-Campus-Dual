# Generated by Django 3.2.8 on 2021-12-02 15:07

import cd_core.managers
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email-Adresse')),
                ('first_name', models.CharField(max_length=50, verbose_name='Vorname')),
                ('last_name', models.CharField(max_length=50, verbose_name='Nachname')),
                ('streetNameAndNumber', models.CharField(max_length=100, null=True, verbose_name='Anschrift - Straße und Hausnummer')),
                ('zipCode', models.CharField(max_length=5, verbose_name='Anschrift - Postleitzahl')),
                ('city', models.CharField(max_length=100, verbose_name='Anschrift - Ort')),
                ('gender', models.CharField(choices=[('m', 'männlich'), ('w', 'weiblich'), ('d', 'divers')], max_length=1, null=True, verbose_name='Geschlecht')),
                ('dateOfBirth', models.DateField(null=True, verbose_name='Geburtstag')),
                ('placeOfBirth', models.CharField(max_length=100, null=True, verbose_name='Geburtsort')),
                ('phoneNumber', models.CharField(max_length=30, null=True, verbose_name='Telefonnummer')),
                ('nationality', models.CharField(max_length=100, null=True, verbose_name='Staatsangehörigkeit')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('registration_number', models.CharField(max_length=7, null=True, unique=True, verbose_name='Matrikelnummer / Personalnummer')),
                ('enrollmentDate', models.DateField(blank=True, default=datetime.date(2022, 10, 1), null=True, verbose_name='Immatrikulationsdatum')),
                ('role', models.CharField(choices=[('Stu', 'Student'), ('Lec', 'Lecturer'), ('Org', 'Organisator')], default='Stu', max_length=3, verbose_name='Rolle')),
                ('ects', models.PositiveIntegerField(default=0, editable=False, verbose_name='ECTS-Punkte')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Benutzer',
                'verbose_name_plural': '  Benutzer',
            },
            managers=[
                ('objects', cd_core.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, unique=True, verbose_name='Bezeichnung')),
                ('abbrev', models.CharField(max_length=5, null=True, unique=True, verbose_name='Abkürzung')),
                ('degree', models.CharField(choices=[('Bachelor of Science', 'Bachelor of Science'), ('Bachelor of Arts', 'Bachelor of Arts'), ('Bachelor of Engineering', 'Bachelor of Engineering')], max_length=50, null=True, verbose_name='Abschluss')),
            ],
            options={
                'verbose_name': 'Studiengang',
                'verbose_name_plural': '    Studiengänge',
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headInstitution', models.CharField(max_length=100, null=True, verbose_name='Hauptinstitution')),
                ('subInstitution', models.CharField(max_length=100, null=True, unique=True, verbose_name='Unterinstitution')),
                ('streetNameAndNumber', models.CharField(max_length=100, null=True, verbose_name='Anschrift - Straße und Hausnummer')),
                ('zipCode', models.CharField(max_length=5, null=True, verbose_name='Anschrift - Postleitzahl')),
                ('city', models.CharField(max_length=100, null=True, verbose_name='Anschrift - Ort')),
            ],
            options={
                'verbose_name': 'Institution',
                'verbose_name_plural': '     Institutionen',
            },
        ),
        migrations.CreateModel(
            name='Seminargroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Bezeichnung')),
                ('enrollment_year', models.IntegerField(choices=[(2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030)], default=(2022, 2022), verbose_name='Immatrikulationsjahr')),
                ('rythm', models.CharField(choices=[('TP', 'Theorie -> Praxis'), ('PT', 'Praxis -> Theorie')], default='TP', max_length=2, verbose_name='Phasenrythmus')),
                ('term1_t_start', models.DateField(editable=False, null=True)),
                ('term1_t_end', models.DateField(editable=False, null=True)),
                ('term1_p_start', models.DateField(editable=False, null=True)),
                ('term1_p_end', models.DateField(editable=False, null=True)),
                ('term2_t_start', models.DateField(editable=False, null=True)),
                ('term2_t_end', models.DateField(editable=False, null=True)),
                ('term2_p_start', models.DateField(editable=False, null=True)),
                ('term2_p_end', models.DateField(editable=False, null=True)),
                ('term3_t_start', models.DateField(editable=False, null=True)),
                ('term3_t_end', models.DateField(editable=False, null=True)),
                ('term3_p_start', models.DateField(editable=False, null=True)),
                ('term3_p_end', models.DateField(editable=False, null=True)),
                ('term4_t_start', models.DateField(editable=False, null=True)),
                ('term4_t_end', models.DateField(editable=False, null=True)),
                ('term4_p_start', models.DateField(editable=False, null=True)),
                ('term4_p_end', models.DateField(editable=False, null=True)),
                ('term5_t_start', models.DateField(editable=False, null=True)),
                ('term5_t_end', models.DateField(editable=False, null=True)),
                ('term5_p_start', models.DateField(editable=False, null=True)),
                ('term5_p_end', models.DateField(editable=False, null=True)),
                ('term6_t_start', models.DateField(editable=False, null=True)),
                ('term6_t_end', models.DateField(editable=False, null=True)),
                ('term6_p_start', models.DateField(editable=False, null=True)),
                ('term6_p_end', models.DateField(editable=False, null=True)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='cd_core.course', verbose_name='Studiengang')),
            ],
            options={
                'verbose_name': 'Seminargruppe',
                'verbose_name_plural': '   Seminargruppen',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cd_core.institution', verbose_name='Institution')),
            ],
            options={
                'verbose_name': 'Raum',
                'verbose_name_plural': ' Räume',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, null=True, verbose_name='Modulname')),
                ('code', models.CharField(max_length=100, unique=True, verbose_name='Modulcode')),
                ('moduleType', models.CharField(choices=[('mandatory', 'Pflichtmodul'), ('elective', 'Wahlpflichtmodul')], default='mandatory', max_length=16, verbose_name='Modulart')),
                ('term', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6')], verbose_name='Semester')),
                ('type', models.CharField(choices=[('K', 'Klausur'), ('C', 'Computerklausur'), ('P', 'Präsentation'), ('SE', 'Hausarbeit'), ('PR', 'Projektarbeit'), ('M', 'Mündliche Prüfung'), ('BT', 'Bachelor Thesis')], max_length=2, null=True, verbose_name='Prüfungsart')),
                ('ects', models.PositiveIntegerField(null=True, verbose_name='ECTS-Punkte')),
                ('lecturer1', models.ForeignKey(limit_choices_to={'role': 'Lec'}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lecturer1', to=settings.AUTH_USER_MODEL, verbose_name='Dozent')),
                ('lecturer2', models.ForeignKey(blank=True, limit_choices_to={'role': 'Lec'}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lecturer2', to=settings.AUTH_USER_MODEL, verbose_name='Dozent')),
                ('lecturer3', models.ForeignKey(blank=True, limit_choices_to={'role': 'Lec'}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lecturer3', to=settings.AUTH_USER_MODEL, verbose_name='Dozent')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='cd_core.course', verbose_name='Studiengang')),
            ],
            options={
                'verbose_name': 'Modul',
                'verbose_name_plural': 'Module',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cd_core.institution', verbose_name='Institution'),
        ),
        migrations.AddField(
            model_name='user',
            name='seminargroup',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cd_core.seminargroup'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
